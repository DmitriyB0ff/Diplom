variables:
  VERSION: 1.0.${CI_PIPELINE_ID}

stages:
  - test
  - build
  - update-chart
  - release


sonarqube-frontend-sast:
  stage: test
  image: sonarsource/sonar-scanner-cli:latest
  script:
    - cd frontend
    - >
      sonar-scanner
      -Dsonar.sources=. 
      -Dsonar.qualitygate.wait=true
      -Dsonar.projectKey=${SONAR_PROJECT_KEY}
      -Dsonar.host.url=${SONARQUBE_URL}
      -Dsonar.login=${SONAR_LOGIN}
      -Dsonar.projectName="Dmitriy_Kuropatko_momostore_f"
  when: manual    

spotbugs-sast:
  stage: test
  script:
    - cd frontend

build-frontend-code-job:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:v1.9.0-debug
    entrypoint: [""]
  # переменные CI_REGISTRY_USER, CI_REGISTRY_PASSWORD, CI_REGISTRY генерятся Гитлабом, их задавать не надо
  script:
    - echo "test"
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}/frontend"
      --dockerfile "${CI_PROJECT_DIR}/frontend/Dockerfile"
      --destination "${CI_REGISTRY_IMAGE}/momo-frontend:$CI_COMMIT_SHA"
      --build-arg VERSION=$VERSION
      --cache=true      

upload-frontend-release:
  variables:
    GIT_STRATEGY: none
  image:
    name: gcr.io/go-containerregistry/crane:debug
    entrypoint: [ "" ]
  cache: [ ]
  stage: release
  before_script:
    - apk add docker-ce docker-compose-plugin curl
    - until docker info; do sleep 1; done
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker-compose build frontend
    - docker-compose push frontend