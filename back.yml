variables:
  VERSION: 1.0.${CI_PIPELINE_ID}

stages:
  - test
  - build
  - release
  - update-chart

sonarqube-backend-sast:
  stage: test
  image: sonarsource/sonar-scanner-cli:latest
  script:
    - cd backend
    - >
      sonar-scanner
      -Dsonar.sources=. 
      -Dsonar.qualitygate.wait=true
      -Dsonar.projectKey=${SONAR_PROJECT_KEY}
      -Dsonar.host.url=${SONARQUBE_URL}
      -Dsonar.login=${SONAR_LOGIN}
      -Dsonar.projectName="Dmitriy_Kuropatko_momostore_b"
  when: manual    

spotbugs-sast:
  stage: test
  script:
    - cd frontend

go-test:
  stage: test
  image: golang:latest
  script:
    - cd backend
    - go test -v ./...
  allow_failure: true

build-backend-code-job: 
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:v1.9.0-debug
    entrypoint: [""]
  # переменные CI_REGISTRY_USER, CI_REGISTRY_PASSWORD, CI_REGISTRY генерятся Гитлабом, их задавать не надо
  script:
    - echo "test"
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}/backend"
      --dockerfile "${CI_PROJECT_DIR}/backend/Dockerfile"
      --destination "${CI_REGISTRY_IMAGE}/momo-backend:$CI_COMMIT_SHA"
      --build-arg VERSION=$VERSION
      --cache=true      

upload-backend-release:
  variables:
    GIT_STRATEGY: none
  image:
    name: gcr.io/go-containerregistry/crane:debug
    entrypoint: [ "" ]
  cache: [ ]
  stage: release
  before_script:
    - crane auth login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - crane tag $CI_REGISTRY_IMAGE/momo-backend:$CI_COMMIT_SHA $VERSION

# build-backend-docker-image:
#   stage: build
#   image: docker:24.0.7-alpine3.19
#   before_script:
#     - apk add docker docker-compose curl
#     #- until docker info; do sleep 1; done
#     # переменные CI_REGISTRY_USER, CI_REGISTRY_PASSWORD, CI_REGISTRY генерятся Гитлабом, их задавать не надо
#     - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
#   script:
#     - docker compose build backend
#     - docker compose push backend

update-version-chart:
  stage: update-chart
  image: docker:24.0.7-alpine3.19
  before_script:
    - apk update && apk add bash curl git openssh-client docker
    #- until docker info; do sleep 1; done
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY    
  script:
    #Настраиваем CLI YC и kubeconfig (неинтерактивный режим)
    - /bin/bash -s < ./helmchart_ver2.sh